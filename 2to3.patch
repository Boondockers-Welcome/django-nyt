--- ./setup.py	(original)
+++ ./setup.py	(refactored)
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 
 import os
 from django_nyt import VERSION
--- ./django_nyt/__init__.py	(original)
+++ ./django_nyt/__init__.py	(refactored)
@@ -38,7 +38,7 @@
     
     if target_object:
         if not isinstance(target_object, Model):
-            raise TypeError(_(u"You supplied a target_object that's not an instance of a django Model."))
+            raise TypeError(_("You supplied a target_object that's not an instance of a django Model."))
         object_id = target_object.id
     else:
         object_id = None
--- ./django_nyt/admin.py	(original)
+++ ./django_nyt/admin.py	(refactored)
@@ -16,11 +16,11 @@
 
     def display_user(self, instance):
         return instance.settings.user
-    display_user.short_description = _(u"user")
+    display_user.short_description = _("user")
 
     def display_interval(self, instance):
         return instance.settings.interval
-    display_interval.short_description = _(u"interval")
+    display_interval.short_description = _("interval")
 
 
 if settings.ENABLE_ADMIN:
--- ./django_nyt/models.py	(original)
+++ ./django_nyt/models.py	(refactored)
@@ -16,12 +16,12 @@
     key = models.CharField(
         max_length=128, 
         primary_key=True, 
-        verbose_name=_(u'unique key'),
+        verbose_name=_('unique key'),
         unique=True
     )
     label = models.CharField(
         max_length=128, 
-        verbose_name=_(u'verbose name'),
+        verbose_name=_('verbose name'),
         blank=True, 
         null=True
     )
@@ -32,8 +32,8 @@
     
     class Meta:
         db_table = settings.DB_TABLE_PREFIX + '_notificationtype'
-        verbose_name = _(u'type')
-        verbose_name_plural = _(u'types')
+        verbose_name = _('type')
+        verbose_name_plural = _('types')
 
 
 class Settings(models.Model):
@@ -46,18 +46,18 @@
     )
     interval = models.SmallIntegerField(
         choices=settings.INTERVALS, 
-        verbose_name=_(u'interval'),
+        verbose_name=_('interval'),
         default=settings.INTERVALS_DEFAULT
     )
     
     def __unicode__(self):
-        obj_name = _(u"Settings for %s") % self.user.username
-        return unicode(obj_name)
+        obj_name = _("Settings for %s") % self.user.username
+        return str(obj_name)
     
     class Meta:
         db_table = settings.DB_TABLE_PREFIX + '_settings'
-        verbose_name = _(u'settings')
-        verbose_name_plural = _(u'settings')
+        verbose_name = _('settings')
+        verbose_name_plural = _('settings')
 
 
 class Subscription(models.Model):
@@ -68,7 +68,7 @@
         max_length=64, 
         null=True, 
         blank=True, 
-        help_text=_(u'Leave this blank to subscribe to any kind of object')
+        help_text=_('Leave this blank to subscribe to any kind of object')
     )
     send_emails = models.BooleanField(default=True)
     latest = models.ForeignKey('Notification', 
@@ -79,12 +79,12 @@
     
     def __unicode__(self):
         obj_name = _("Subscription for: %s") % str(self.settings.user.username)
-        return unicode(obj_name)
+        return str(obj_name)
 
     class Meta:
         db_table = settings.DB_TABLE_PREFIX + '_subscription'
-        verbose_name = _(u'subscription')
-        verbose_name_plural = _(u'subscriptions')
+        verbose_name = _('subscription')
+        verbose_name_plural = _('subscriptions')
 
 
 class Notification(models.Model):
@@ -97,7 +97,7 @@
     )
     message = models.TextField()
     url = models.CharField(
-        verbose_name=_(u'link for notification'),
+        verbose_name=_('link for notification'),
         blank=True, 
         null=True, 
         max_length=200
@@ -107,9 +107,9 @@
     created = models.DateTimeField(auto_now_add=True)
     occurrences = models.PositiveIntegerField(
         default=1, 
-        verbose_name=_(u'occurrences'),
+        verbose_name=_('occurrences'),
         help_text=_(
-            u'If the same notification was fired multiple '
+            'If the same notification was fired multiple '
              'times with no intermediate notifications'
          )
     )
@@ -172,6 +172,6 @@
 
     class Meta:
         db_table = settings.DB_TABLE_PREFIX + '_notification'
-        verbose_name = _(u'notification')
-        verbose_name_plural = _(u'notifications')
+        verbose_name = _('notification')
+        verbose_name_plural = _('notifications')
         ordering = ('-id',)
--- ./django_nyt/settings.py	(original)
+++ ./django_nyt/settings.py	(refactored)
@@ -35,9 +35,9 @@
 
 # List of intervals available. In minutes
 INTERVALS = getattr(django_settings, 'NYT_INTERVALS',
-    [(INSTANTLY, _(u'instantly')),
-     (DAILY, _(u'daily')),
-     (WEEKLY, _(u'weekly'))]
+    [(INSTANTLY, _('instantly')),
+     (DAILY, _('daily')),
+     (WEEKLY, _('weekly'))]
 )
 
 INTERVALS_DEFAULT = INSTANTLY
--- ./django_nyt/views.py	(original)
+++ ./django_nyt/views.py	(refactored)
@@ -29,7 +29,7 @@
                          'message': n.message,
                          'url': n.url,
                          'occurrences': n.occurrences,
-                         'occurrences_msg': _(u'%d times') % n.occurrences,
+                         'occurrences_msg': _('%d times') % n.occurrences,
                          'type': n.subscription.notification_type.key,
                          'since': naturaltime(n.created)} for n in notifications[:max_results]]}
 
--- ./django_nyt/management/commands/notifymail.py	(original)
+++ ./django_nyt/management/commands/notifymail.py	(refactored)
@@ -61,7 +61,7 @@
         self.logger.info("Starting django_nyt e-mail dispatcher")
 
         if not nyt_settings.SEND_EMAILS:
-            print "E-mails disabled - quitting."
+            print("E-mails disabled - quitting.")
             sys.exit()
 
         # Run as daemon, ie. fork the process
@@ -76,14 +76,14 @@
                     pid_file.write(str(fpid))
                     pid_file.close()
                     sys.exit(0)
-            except OSError, e:
+            except OSError as e:
                 sys.stderr.write("fork failed: %d (%s)\n" % (e.errno, e.strerror))
                 sys.exit(1)
 
         try:
             self.send_loop()
         except KeyboardInterrupt:
-            print "\nQuitting..."
+            print("\nQuitting...")
 
         # deactivate the language
         deactivate()
--- ./django_nyt/migrations/0001_initial.py	(original)
+++ ./django_nyt/migrations/0001_initial.py	(refactored)
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from __future__ import unicode_literals
+
 
 from django.db import models, migrations
 
--- ./django_nyt/migrations/0002_notification_settings.py	(original)
+++ ./django_nyt/migrations/0002_notification_settings.py	(refactored)
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from __future__ import unicode_literals
+
 
 from django.db import models, migrations
 from django.conf import settings
--- ./django_nyt/migrations/0003_subscription.py	(original)
+++ ./django_nyt/migrations/0003_subscription.py	(refactored)
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from __future__ import unicode_literals
+
 
 from django.db import models, migrations
 
--- ./django_nyt/migrations/0004_notification_subscription.py	(original)
+++ ./django_nyt/migrations/0004_notification_subscription.py	(refactored)
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from __future__ import unicode_literals
+
 
 from django.db import models, migrations
 import django.db.models.deletion
--- ./django_nyt/south_migrations/0001_initial.py	(original)
+++ ./django_nyt/south_migrations/0001_initial.py	(refactored)
@@ -14,30 +14,30 @@
             ('label', self.gf('django.db.models.fields.CharField')(max_length=128, null=True, blank=True)),
             ('content_type', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['contenttypes.ContentType'], null=True, blank=True)),
         ))
-        db.send_create_signal(u'django_nyt', ['NotificationType'])
+        db.send_create_signal('django_nyt', ['NotificationType'])
 
         # Adding model 'Settings'
         db.create_table('nyt_settings', (
-            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
+            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
             ('interval', self.gf('django.db.models.fields.SmallIntegerField')(default=0)),
         ))
-        db.send_create_signal(u'django_nyt', ['Settings'])
+        db.send_create_signal('django_nyt', ['Settings'])
 
         # Adding model 'Subscription'
         db.create_table('nyt_subscription', (
-            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
+            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('settings', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['django_nyt.Settings'])),
             ('notification_type', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['django_nyt.NotificationType'])),
             ('object_id', self.gf('django.db.models.fields.CharField')(max_length=64, null=True, blank=True)),
             ('send_emails', self.gf('django.db.models.fields.BooleanField')(default=True)),
             ('latest', self.gf('django.db.models.fields.related.ForeignKey')(blank=True, related_name='latest_for', null=True, to=orm['django_nyt.Notification'])),
         ))
-        db.send_create_signal(u'django_nyt', ['Subscription'])
+        db.send_create_signal('django_nyt', ['Subscription'])
 
         # Adding model 'Notification'
         db.create_table('nyt_notification', (
-            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
+            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
             ('subscription', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['django_nyt.Subscription'], null=True, on_delete=models.SET_NULL, blank=True)),
             ('message', self.gf('django.db.models.fields.TextField')()),
             ('url', self.gf('django.db.models.fields.CharField')(max_length=200, null=True, blank=True)),
@@ -46,7 +46,7 @@
             ('created', self.gf('django.db.models.fields.DateTimeField')(auto_now_add=True, blank=True)),
             ('occurrences', self.gf('django.db.models.fields.PositiveIntegerField')(default=1)),
         ))
-        db.send_create_signal(u'django_nyt', ['Notification'])
+        db.send_create_signal('django_nyt', ['Notification'])
 
 
     def backwards(self, orm):
@@ -64,73 +64,73 @@
 
 
     models = {
-        u'auth.group': {
+        'auth.group': {
             'Meta': {'object_name': 'Group'},
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
-            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
+            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
         },
-        u'auth.permission': {
+        'auth.permission': {
             'Meta': {'ordering': "(u'content_type__app_label', u'content_type__model', u'codename')", 'unique_together': "((u'content_type', u'codename'),)", 'object_name': 'Permission'},
             'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
-            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['contenttypes.ContentType']"}),
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['contenttypes.ContentType']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
         },
-        u'auth.user': {
+        'auth.user': {
             'Meta': {'object_name': 'User'},
             'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
             'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
-            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Group']", 'symmetrical': 'False', 'blank': 'True'}),
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Group']", 'symmetrical': 'False', 'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
             'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
             'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
             'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
-            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'}),
+            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'}),
             'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
         },
-        u'contenttypes.contenttype': {
+        'contenttypes.contenttype': {
             'Meta': {'ordering': "('name',)", 'unique_together': "(('app_label', 'model'),)", 'object_name': 'ContentType', 'db_table': "'django_content_type'"},
             'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
             'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
         },
-        u'django_nyt.notification': {
+        'django_nyt.notification': {
             'Meta': {'ordering': "('-id',)", 'object_name': 'Notification', 'db_table': "'nyt_notification'"},
             'created': ('django.db.models.fields.DateTimeField', [], {'auto_now_add': 'True', 'blank': 'True'}),
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'is_emailed': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'is_viewed': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'message': ('django.db.models.fields.TextField', [], {}),
             'occurrences': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1'}),
-            'subscription': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['django_nyt.Subscription']", 'null': 'True', 'on_delete': 'models.SET_NULL', 'blank': 'True'}),
+            'subscription': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['django_nyt.Subscription']", 'null': 'True', 'on_delete': 'models.SET_NULL', 'blank': 'True'}),
             'url': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
         },
-        u'django_nyt.notificationtype': {
+        'django_nyt.notificationtype': {
             'Meta': {'object_name': 'NotificationType', 'db_table': "'nyt_notificationtype'"},
-            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['contenttypes.ContentType']", 'null': 'True', 'blank': 'True'}),
+            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['contenttypes.ContentType']", 'null': 'True', 'blank': 'True'}),
             'key': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '128', 'primary_key': 'True'}),
             'label': ('django.db.models.fields.CharField', [], {'max_length': '128', 'null': 'True', 'blank': 'True'})
         },
-        u'django_nyt.settings': {
+        'django_nyt.settings': {
             'Meta': {'object_name': 'Settings', 'db_table': "'nyt_settings'"},
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'interval': ('django.db.models.fields.SmallIntegerField', [], {'default': '0'}),
-            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"})
+            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['auth.User']"})
         },
-        u'django_nyt.subscription': {
+        'django_nyt.subscription': {
             'Meta': {'object_name': 'Subscription', 'db_table': "'nyt_subscription'"},
-            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
-            'latest': ('django.db.models.fields.related.ForeignKey', [], {'blank': 'True', 'related_name': "'latest_for'", 'null': 'True', 'to': u"orm['django_nyt.Notification']"}),
-            'notification_type': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['django_nyt.NotificationType']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'latest': ('django.db.models.fields.related.ForeignKey', [], {'blank': 'True', 'related_name': "'latest_for'", 'null': 'True', 'to': "orm['django_nyt.Notification']"}),
+            'notification_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['django_nyt.NotificationType']"}),
             'object_id': ('django.db.models.fields.CharField', [], {'max_length': '64', 'null': 'True', 'blank': 'True'}),
             'send_emails': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
-            'settings': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['django_nyt.Settings']"})
+            'settings': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['django_nyt.Settings']"})
         }
     }
 
--- ./docs/conf.py	(original)
+++ ./docs/conf.py	(refactored)
@@ -40,8 +40,8 @@
 master_doc = 'index'
 
 # General information about the project.
-project = u'django-nyt'
-copyright = u'2014, Benjamin Bach'
+project = 'django-nyt'
+copyright = '2014, Benjamin Bach'
 
 # The version info for the project you're documenting, acts as replacement for
 # |version| and |release|, also used in various other places throughout the
@@ -191,8 +191,8 @@
 # Grouping the document tree into LaTeX files. List of tuples
 # (source start file, target name, title, author, documentclass [howto/manual]).
 latex_documents = [
-  ('index', 'django-nyt.tex', u'django-nyt Documentation',
-   u'Benjamin Bach', 'manual'),
+  ('index', 'django-nyt.tex', 'django-nyt Documentation',
+   'Benjamin Bach', 'manual'),
 ]
 
 # The name of an image file (relative to this directory) to place at the top of
@@ -221,8 +221,8 @@
 # One entry per manual page. List of tuples
 # (source start file, name, description, authors, manual section).
 man_pages = [
-    ('index', 'django-nyt', u'django-nyt Documentation',
-     [u'Benjamin Bach'], 1)
+    ('index', 'django-nyt', 'django-nyt Documentation',
+     ['Benjamin Bach'], 1)
 ]
 
 # If true, show URL addresses after external links.
@@ -235,8 +235,8 @@
 # (source start file, target name, title, author,
 #  dir menu entry, description, category)
 texinfo_documents = [
-  ('index', 'django-nyt', u'django-nyt Documentation',
-   u'Benjamin Bach', 'django-nyt', 'One line description of project.',
+  ('index', 'django-nyt', 'django-nyt Documentation',
+   'Benjamin Bach', 'django-nyt', 'One line description of project.',
    'Miscellaneous'),
 ]
 
